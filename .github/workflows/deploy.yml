name: Test tag pushes

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  PKG_NAME: testpkg

jobs:

  testjob1:
    name: check in PyPI
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.current_version.outputs.current_version }}
      already_in_pypi: ${{ steps.check_in_pypi.outputs.pypi_versions != '' }}
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: dump tags data
        run: |
          ! read -r -d '' msg << EOF
          github context
          ${{ toJson(github) }}
          EOF
          echo "$msg"
          echo "===================="
          echo "environment"
          env
      - name: check if already deployed
        id: current_version
        run:  echo "::set-output name=current_version::$(echo ${{ env.GITHUB_REF }} | cut -d'v' -f 2)"
      - name: check if already deployed
        id: check_in_pypi
        # Note. other options:
        #   - use 'pip install --no-deps PKG==VERSION' with current version
        #   - use 'pip index versions PKG==VERSION'
        #     (but it's a kind of experimental feature of pip >= 21.2)
        run: |
          python -m pip install --upgrade pip
          out="$(pip install --use-deprecated=legacy-resolver ${{ env.PKG_NAME }}== 2>&1 \
              | grep -E "Could not find .* ${{ steps.current_version.outputs.current_version }}(,|\))")"
          echo "::set-output name=pypi_versions::$out"
        shell: bash {0}  # to opt-out of default fail-fast behavior

  testjob2:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs: testjob1
    if: needs.testjob1.outputs.already_in_pypi == 'false'
    steps:
      - uses: actions/checkout@v2
      - name: download GitHub artifacts
        run: |
          mkdir -p dist
          cd dist
          curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ needs.testjob1.outputs.current_version }} \
            | jq -r ".assets[] | select(.name | contains(\"${{ env.PKG_NAME }}\")) | .browser_download_url" \
            | wget -i -
          ls
      - name: Publish to PyPI
        if: github.event_name == 'push' # && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}

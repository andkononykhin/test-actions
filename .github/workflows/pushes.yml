name: Test pushes to branches

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:

  testjob1:
    name: get tags data
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}
      previous_tag: ${{ steps.tag_version.outputs.previous_tag }}
      previous_version: ${{ steps.tag_version.outputs.previous_version }}
      release_type: ${{ steps.tag_version.outputs.release_type }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
      src_current_version: ${{ steps.src_current_version.outputs.src_current_version }}
      already_released: ${{ steps.tag_version.outputs.previous_version == steps.src_current_version.outputs.src_current_version }}

    steps:
      - uses: actions/checkout@v2
      - name: debug
        run: |
          pwd
          ls -la
          cat ./version
      - name: Get current version
        id: src_current_version
        run: echo "::set-output name=src_current_version::$(cat ./version)"
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          custom_tag: "${{ steps.src_current_version.outputs.src_current_version }}"
          dry_run: true

  testjob2:
    name: dump data
    runs-on: ubuntu-latest
    needs: testjob1
    steps:
      - name: dump tags data
        run: |
          ! read -r -d '' msg << EOF
          testjob1 outputs
          ${{ toJson(needs.testjob1.outputs) }}
          ====================
          github context
          ${{ toJson(github) }}
          EOF
          echo "$msg"
          echo "===================="
          echo "environment"
          env

  testjob3:
    name: conditional on tags (skipped)
    runs-on: ubuntu-latest
    needs: testjob1
    if: needs.testjob1.outputs.already_released == 'true'
    steps:
      - name: just echo
        run: echo "Conditional doesn't work" && exit 1

  testjob4:
    name: GitHub Release Python
    runs-on: ubuntu-latest
    needs: testjob1
    if: needs.testjob1.outputs.already_released == 'false'
    steps:
      - uses: actions/checkout@v2
      - name: build dist
        run: |
          mkdir dist
          touch "dist/testpkg-${{ needs.testjob1.outputs.src_current_version }}-py3-none-any.whl" \
            "dist/testpkg-${{ needs.testjob1.outputs.src_current_version }}.tar.gz"
          ls dist
      - uses: ncipollo/release-action@v1
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          artifacts: "dist/*"
          tag: ${{ needs.testjob1.outputs.new_tag }}
          commit: main
          body: ${{ needs.testjob1.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}

name: tests

on: [ pull_request ]


jobs:

  testme:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Echo github obj
        run: |
           ! read -r -d '' msg << EOF
           payload ${{ toJson(env) }}
           EOF
           echo "$msg"
           echo "$GITHUB_SHA"
           echo "$GITHUB_REF"

      - name: set dev version
        run: |
          sed -r "s~version=\"(.+)\"~version=\"\1.dev0+${GITHUB_SHA:0:7}\"~" ./version
        shell: bash

  check-version-bumped:
    name: Check version bumped
    runs-on: ubuntu-latest
    if: false && github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'stable'
    steps:
      - uses: actions/checkout@v2

      - name: Get current version
        id: current_version
        run: echo "::set-output name=current_version::$(cat ./version)"

      - name: Get release info
        id: release_info
        run: |
          release_info="$(curl -s https://api.github.com/repos/${{ github.repository }}/releases \
              | jq '.[] | select(.name == "v${{ steps.current_version.outputs.current_version }}")')"
          echo "::set-output name=release_info::$release_info"
          echo "$release_info"
        shell: bash

      - name: fail unless release not found
        # TODO check if greater than latest tag / release (?)
        if: steps.release_info.outputs.release_info
        run: exit 1

  build:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: echo "Done"
